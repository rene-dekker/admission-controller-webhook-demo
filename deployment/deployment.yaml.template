apiVersion: apps/v1
kind: Deployment
metadata:
  name: tigera-init-injector
  namespace: tigera-init-injector
  labels:
    app: tigera-init-injector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tigera-init-injector
  template:
    metadata:
      labels:
        app: tigera-init-injector
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1234
      containers:
      - name: server
        image: docker.io/rdtigera/webhook:rene
        imagePullPolicy: Always
        ports:
        - containerPort: 8443
          name: webhook-api
        volumeMounts:
        - name: webhook-tls-certs
          mountPath: /run/secrets/tls
          readOnly: true
      imagePullSecrets:
      - name: tigera-pull-secret
      volumes:
      - name: webhook-tls-certs
        secret:
          secretName: tigera-init-injector-tls
---
apiVersion: v1
kind: Service
metadata:
  name: tigera-init-injector
  namespace: tigera-init-injector
spec:
  selector:
    app: tigera-init-injector
  ports:
    - port: 443
      targetPort: webhook-api
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: tigera-init-injector
webhooks:
  - name: tigera-init-injector.tigera-init-injector.svc
    clientConfig:
      service:
        name: tigera-init-injector
        namespace: tigera-init-injector
        path: "/mutate"
      caBundle: ${CA_PEM_B64}
    namespaceSelector:
      matchExpressions:
      - key: name
        operator: In
        values: ["calico-system", "tigera-system"]
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["deployments"]
        scope: "Namespaced"
